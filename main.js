!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{const n=t.id+"-error",o=e.querySelector("#"+n);o&&(o.textContent=""),t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=(e,t,n)=>{(e=>e.some(e=>!e.validity.valid))(e)?r(t,n):((e,t)=>{e.disabled=!1,e.classList.remove(t.inactiveButtonClass)})(t,n)},o=e=>{document.querySelectorAll(e.formSelector).forEach(r=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);n(o,a,r),o.forEach(s=>{s.addEventListener("input",function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=t.id+"-error",a=e.querySelector("#"+o);a&&(a.textContent=r),t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)})})})(r,e)})};o(e);const a=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleServerResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleServerResponse)}addCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._handleServerResponse)}DeleteCard({id:e}){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}ChangeLikes({id:e,isLiked:t}){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._handleServerResponse)}editAvatar({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f30ceff3-b3e8-42fb-ae90-fe3a587f05fd","Content-Type":"application/json"}}),s=document.querySelector(".profile__edit-btn"),c=document.querySelector("#edit-profile-modal"),i=c.querySelector(".modal__close-btn"),l=c.querySelector(".modal__form"),d=c.querySelector("#profile-name-input"),u=c.querySelector("#profile-description-input"),_=document.querySelector(".profile__avatar"),m=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),v=document.querySelector(".profile__add-btn"),f=document.querySelector("#new-post-modal"),p=f.querySelector(".modal__close-btn"),S=f.querySelector(".modal__form"),y=f.querySelector("#card-image-input"),b=f.querySelector("#card-caption-input"),q=document.querySelector(".cards__list"),E=document.querySelector("#preview-modal"),L=E.querySelector(".modal__close_type_preview"),k=E.querySelector(".modal__image"),C=E.querySelector(".modal__caption"),g=document.querySelector("#card-template").content.querySelector(".card"),U=document.querySelector("#delete-modal"),A=document.querySelector(".modal__delete-btn"),x=U.querySelector(".modal__submit-btn");let $,D;function w(e){if("Escape"===e.key){const e=document.querySelector(".modal_is-opened");e&&P(e)}}function I(e){e.target.classList.contains("modal_is-opened")&&P(e.target)}function R(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",w),e.addEventListener("click",I)}function P(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",w),e.removeEventListener("click",I)}document.querySelector(".modal__close-btn-position").addEventListener("click",function(){P(U)}),x.addEventListener("click",function(){P(U)}),a.getUserInfo().then(e=>{m.textContent=e.name,h.textContent=e.about,_.src=e.avatar,console.log(e)}).catch(e=>{console.error(e)}),a.getInitialCards().then(e=>{e.forEach(t=>{const r=j(t);q.append(r),console.log(e)})}).catch(e=>{console.error(e)}),s.addEventListener("click",function(){((e,n)=>{const o=Array.from(e.querySelectorAll(n.inputSelector)),a=e.querySelector(n.submitButtonSelector);o.forEach(r=>{t(e,r,n)}),r(a,n)})(l,e),R(c),d.value=m.textContent,u.value=h.textContent}),i.addEventListener("click",function(){P(c)}),L.addEventListener("click",function(){P(E)}),v.addEventListener("click",function(){R(f)}),p.addEventListener("click",function(){P(f)}),l.addEventListener("submit",function(e){e.preventDefault(),a.editUserInfo({name:d.value,about:u.value}).then(e=>{m.textContent=e.name,h.textContent=e.about,P(c)}).catch(e=>{console.error(e)})}),S.addEventListener("submit",function(t){t.preventDefault();const r={name:b.value,link:y.value};a.addCard(r).then(r=>{const n=j(r);q.prepend(n),P(f),t.target.reset(),o(e)}).catch(e=>{console.error(e)})}),A.addEventListener("click",function(e){e.preventDefault(),a.DeleteCard({id:$}).then(()=>{D.remove(),P(U)}).catch(e=>{console.error(e)})});const T=document.querySelector("#modal__avatar"),B=document.querySelector(".profile__avatar-btn"),N=document.querySelector(".submit-avatar-btn"),O=document.querySelector("#Avatar-image-input");function j(e){const t=g.cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),s=t.querySelector(".card__delete");return n.src=e.link,n.alt=e.name,r.textContent=e.name,e.isLiked&&o.classList.add("card__like-btn_active"),o.addEventListener("click",()=>{const t=o.classList.contains("card__like-btn_active");a.ChangeLikes({id:e._id,isLiked:t}).then(()=>{o.classList.toggle("card__like-btn_active")}).catch(e=>{console.error("Error updating like status:",e)})}),s.addEventListener("click",function(){$=e._id,D=t,R(U)}),n.addEventListener("click",function(){k.src=e.link,k.alt=e.name,C.textContent=e.name,R(E)}),t}T.querySelector(".modal__close-btn").addEventListener("click",function(){P(T)}),B.addEventListener("click",function(e){e.preventDefault(),R(T)}),N.addEventListener("click",function(e){e.preventDefault();const t=O.value;console.log("Starting avatar update with:",t),console.log("Current profileAvatar:",_),a.editAvatar({avatar:t}).then(e=>{console.log("API call resolved successfully:",e),_.src=t,P(T)}).catch(e=>{console.log("API call failed with error:",e),console.error("Error details:",e.response?.data||e.message)})}),o(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,